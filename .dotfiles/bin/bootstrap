#!/bin/bash


set -e

# This script checks if it is being sourced or executed in a subshell, works with bash and zsh
(return 0 2>/dev/null) && sourced=1 
if [ $sourced -eq 1 ]; then
    echo "Script is being sourced, invoke it instead with 'sh'. Exiting..." 
    return 1
fi


dotfiles_dir="$HOME/.dotfiles"

if [-d "$dotfiles_dir"]; then
  echo "Dotfiles directory already exists. Exiting..."
  exit 1
fi
#
# Detect the OS
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
else
    echo "Cannot detect OS"
    exit 1
fi

mkdir -p "$dotfiles_dir"
cp -r ../../* "$dotfiles_dir"
cd "$dotfiles_dir"

# Packages to install
packages=(ansible)

# Install packages based on OS
case $OS in
    "ubuntu")
        sudo apt update
        for package in "${packages[@]}"; do
            if ! command -v "$package" &> /dev/null; then
                sudo DEBIAN_FRONTEND=noninteractive apt install -y "$package" --no-install-recommends
            fi
        done
        ;;
    
      "fedora"|"fedoraremixforwsl")
        sudo dnf check-update || true  # dnf check-update exits with 100 if updates are available
        for package in "${packages[@]}"; do
            if ! command -v "$package" &> /dev/null; then
                sudo dnf install -y "$package"
            fi
        done
        ;;
    
    *)
        echo "Unsupported OS: $OS"
        exit 1
        ;;
esac
# Install more recent version of Ansible than the one provided by Ubuntu
# sudo add-apt-repository -y -u ppa:ansible/ansible
# sudo apt update
# sudo DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends ansible

if command -v ansible-galaxy &> /dev/null; then
  ansible-galaxy collection install -r "$dotfiles_dir/ansible/requirements.yml"
fi

if command -v ansible &> /dev/null; then
  ansible-playbook "$dotfiles_dir/ansible/site.yml"
fi

exit 0
